 vector<int> topologicalSort(vector<vector<int>>& adj) {
        vector<int>ans;
        vector<int>indegree(adj.size(),0);
        queue<int>q;
        vector<bool>visited(adj.size(),false);
        indeg(adj,indegree);
        for (int i=0;i<adj.size();i++){
            if(indegree[i]==0){
              q.push(i);
              visited[i]=true;
               
            }
        }
        while(!q.empty()){
            int u=q.front();
            q.pop();
            ans.push_back(u);
            for(int i=0;i<adj[u].size();i++){
                indegree[adj[u][i]]--;
            }
            for(int i=0;i<adj.size();i++){
                if(indegree[i]==0 && visited[i]==false){
                q.push(i);
                visited[i]=true;
                }
            }
        }
        
        return ans;
    }
    void indeg(vector<vector<int>>&adj,vector<int>&indegree){
       for(int i=0;i<adj.size();i++) {
           for(int j=0;j<adj[i].size();j++){
               indegree[adj[i][j]]++;
           }
       }
    }

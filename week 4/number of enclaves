//add all the boundary vertices in queue and do bfs remaining unvisited vertices will be enclaves
class Solution {
public:
    int numEnclaves(vector<vector<int>>& grid) {
        int r=grid.size(),c=grid[0].size();
         queue<pair<int,int>>q;
        vector<vector<bool>>visited(r,vector<bool>(c));
        vector<int>directions={-1,0,1,0,-1};
        for(int i=0;i<r;i++){
            for(int j=0;j<c;j++){
                if(grid[i][j]==0){
                    visited[i][j]=true;
                }
                if(grid[i][j]==1 && (i==0 ||i==r-1 ||j==0 || j==c-1)){
                     q.push({i,j});
                     visited[i][j]=true;
                }
            }
        }
        int count=0;
         while(!q.empty()){
            const auto [u,v]=q.front();
            q.pop();
            for(int k=0;k<4;k++){
                int m=u+directions[k],n=v+directions[k+1];
                if(m<0||n<0||m>=r||n>=c){
                    continue;
                }
                if(visited[m][n])
                continue;
                q.push({m,n});
                visited[m][n]=true;
            }
        }
        for(int i=0;i<r;i++){
            for(int j=0;j<c;j++){
                if(!visited[i][j]){
                    count++;
                }
            }
        }
        
        return count;
    }
    
};

//change one character one by one and try to serch if that word present im given list if so add it in queue and continue dfs traversal until last word is found
class Solution {
public:
    int ladderLength(string beginWord, string endWord, vector<string>& wordList) {
        queue<pair<string,int>>q;
        set<string>st(wordList.begin(),wordList.end());
        q.push({beginWord,1});
        st.erase(beginWord);
        while(!q.empty()){
            auto [word,level]=q.front();
            q.pop();
            if(word==endWord){
                return level;
            }
            for(int i=0;i<word.size();i++){
            string og=word;
            for(char ch='a';ch<='z';ch++){
                word[i]=ch;
                if(st.find(word)!=st.end()){
                    st.erase(word);
                    q.push({word,level+1});
                }
            }
            word[i]=og[i];
            }
        }
     return 0;
    }
};

//prorder traversal but if right child is there and left is not there for  having empty parenthesis before right child it is checked.
*
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    string tree2str(TreeNode* root) {
        return tree(root);
    }
public:string tree(TreeNode *root){
    if(!root)
    return "";
    const string &str=to_string(root->val);
    if(root->right)
    return str+"("+tree(root->left)+")"+"("+tree(root->right)+")";
    if(root->left)
    return str+"("+tree(root->left)+")";
    return str;
}
};

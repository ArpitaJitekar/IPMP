//same as normal traveral just reverse vector b if flag is setelese keep as it is
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
         vector<vector<int>> a;
        vector<int >b;
        int d=0;
        queue<struct TreeNode *>q;
        struct TreeNode *r;
        if(root==NULL)
        return a;
        q.push(root);
        while(!q.empty()){
            for(int i=q.size();i>0;i--){
            r=q.front();
            q.pop();
            b.push_back(r->val);
            if(r->left){
                q.push(r->left);
            }
            if(r->right){
                q.push(r->right);
            }
            }
            if(d==1){
                reverse(b.begin(),b.end());
            }
            a.push_back(b);
            b.clear();
            d=d==0?1:0;
        }
        return a;
    }
};

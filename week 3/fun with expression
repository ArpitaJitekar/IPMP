public:
    int calculate(string s) {
        stack<int>val;
        stack<char>op;
        for(int i=0;i<s.length();i++){
            if(s[i]==' ')
            continue;
            else if(s[i]=='('){
                op.push(s[i]);
            }
            else if(isdigit(s[i])){
                int v=0;
                while(i<s.length() &&isdigit(s[i])){
                    v=v*10+(s[i]-'0');
                    i++;
                }
                val.push(v);
                i--;
            }
            else if(s[i]==')'){
                while(!op.empty() && op.top()!='('){
                    int v1=val.top();
                    val.pop();
                    int v2=val.top();
                    val.pop();
                    char o1=op.top();
                    op.pop();
                    val.push(cal(v2,v1,o1));
                }
                if(!op.empty())
                op.pop();
            }
            else {
                while(!op.empty() && precd(op.top())>=precd(s[i])){
                     int v1=val.top();
                    val.pop();
                    int v2=val.top();
                    val.pop();
                    char o1=op.top();
                    op.pop();
                    val.push(cal(v2,v1,o1));
                }
                op.push(s[i]);
            }
        }
        while(!op.empty()){
              int v1=val.top();
                    val.pop();
                    int v2=val.top();
                    val.pop();
                    char o1=op.top();
                    op.pop();
                    val.push(cal(v2,v1,o1));
        }
        return val.top();
    }
  public: int precd(char c){
        if(c=='*' || c=='/')
        return 2;
        else if(c=='+'|| c=='-')
        return 1;
        return 0;
    }
   public: int cal(int v1,int v2,char op){
        switch(op){
            case '+':return v1+v2;
            case '-':return v1-v2;
            case '*':return v1*v2;
            case '/':return v1/v2;
        }
    }
    
};

class Solution {
public:
    string reorganizeString(string s) {
        string ns;
        unordered_map<char,int>a;
        int mf=0;
        int n=s.length();
        for(const char p:s){
            mf=max(mf,++a[p]);
        }
        if(mf>(n+1)/2){
            return "";
        }
        priority_queue<pair<int,char>>pq;
        for(const auto [c,freq]:a){
            pq.emplace(freq,c);
        }
        int prevf=0;
        int prevc='#';
        while(!pq.empty()){
        const auto [freq,c]=pq.top();
        pq.pop();
        ns+=c;
        if(prevf>0){
            pq.emplace(prevf,prevc);
        }
        prevf=freq-1;
        prevc=c;

    }
     return ns;
    }
   
};

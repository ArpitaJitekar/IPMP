class Solution {
public:
    int maxTurbulenceSize(vector<int>& arr) {
        int n=0,ans=0;
        if(arr.size()==1  )
        return arr.size();
        if(arr.size()==2 &&arr[0]!=arr[1])
        return 2;
        else if(arr.size()==2){
            return 1;
        }
        int p=0;
        for(int i=0;i<arr.size()-1;i++){
            if(arr[i]==arr[i+1]){
                p++;
            }
        }
        if(p==arr.size()-1)
        return 1;
        for(int i=1;i<arr.size()-1;i++){
            if((arr[i]>arr[i-1]&&arr[i]>arr[i+1]) || (arr[i]<arr[i-1]&&arr[i]<arr[i+1])){
                n++;
                ans=max(n,ans);
            }
            else{
                n=0;
            }
        }
    return ans+2;
    }
    
};

//if it is dupliucate of minimum value laso we have too push it as othrewise after pop it may get deleetd and answer might vary
class MinStack {
public:
    MinStack() {
       
    }
    
    void push(int val) {
        s.push(val);
        if(min_s.empty()|| min_s.top()>val){
            min_s.push(val);
        }
        else if( min_s.top()==val){
            min_s.push(min_s.top()); 
        }
    }
    
    void pop() {
        int t1=s.top();
        if(!min_s.empty())
        {int t2=min_s.top();
        if(t1==t2)
        {
            min_s.pop();
        }}
        
        s.pop();
    }
    
    int top() {
       if (!s.empty()) {
            return s.top();
        }
        return -1;
    }
    
    int getMin() {
        if (!min_s.empty()) {
            return min_s.top();
        }
        return -1;
    }
private:stack<int>s;
        stack<int>min_s;
};

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack* obj = new MinStack();
 * obj->push(val);
 * obj->pop();
 * int param_3 = obj->top();
 * int param_4 = obj->getMin();
 */

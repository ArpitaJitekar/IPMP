class Solution {
public:
    vector<vector<int>> kClosest(vector<vector<int>>& points, int k) {
        int n=points.size();
        vector<pair<int,double>>dist;
        vector<vector<int>>d(k,vector<int>(2));
        for(int i=0;i<n;i++){
            dist.push_back({i,distance(points[i][0],points[i][1])});
        }
    sort(dist.begin(), dist.end(), [](const std::pair<int, double>& a, const std::pair<int, double>& b) {
        return a.second < b.second; 
    });
    for(int i=0;i<k;i++){
        d[i][0]=points[dist[i].first][0];
        d[i][1]=points[dist[i].first][1];
    }
    return d;
    }
    double distance(int i,int j){
       return sqrt(i*i+j*j);
    }
};
